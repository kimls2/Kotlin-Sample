apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.3"
  defaultConfig {
    applicationId "com.qualson.tubing"
    multiDexEnabled true
    minSdkVersion 21
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  dexOptions {
    javaMaxHeapSize "4g"
    preDexLibraries = false;
    maxProcessCount = 8;
  }

  signingConfigs {
    release {
      storeFile file("${qualsonKeystoreLocation}")
      keyAlias "${qualsonAppKey_alias}"
      storePassword "${qualsonStore_pass}"
      keyPassword "${qualsonAppKey_pass}"
    }

    debug {
      storeFile file("${qualsonKeystoreLocation}")
      keyAlias "${qualsonAppKey_alias}"
      storePassword "${qualsonStore_pass}"
      keyPassword "${qualsonAppKey_pass}"
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug {
      signingConfig signingConfigs.release
      versionNameSuffix " Debug"
      debuggable true
    }
  }

  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def apk = output.outputFile
      def newName = "${apk.name}-v${versionCode}-n${versionName}.apk"
      output.outputFile = new File(apk.parent, newName)
    }
  }

  sourceSets {
    def commonTestDir = 'src/commonTest/kotlin'

    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
    test {
      java.srcDir commonTestDir
    }
    androidTest {
      java.srcDir commonTestDir
    }
  }

  configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
  }
}

dependencies {
  final SUPPORT_LIBRARY_VERSION = '25.3.1'
  final RETROFIT_VERSION = '2.2.0'
  final OKHTTP3 = '3.7.0'
  final RX_JAVA2 = '2.0.8'
  final RX_ANDROID = '2.0.1'
  final RX_KOTLIN = '2.0.0'
  final DAGGER_VERSION = '2.11-rc2'
  final DEXMAKER_VERSION = '1.4'
  final HAMCREST_VERSION = '1.3'
  final MOCKITO_VERSION = '2.7.22'
  final ESPRESSO_VERSION = '2.2.1'
  final UI_AUTOMATOR_VERSION = '2.1.2'
  final JUNIT_VERSION = '4.12'
  final RUNNER_VERSION = '0.5'
  final FIREBASE_VERSION = '10.2.1'

  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

  // lib
  compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
  compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
  compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
  compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

  // firebase
  compile "com.google.firebase:firebase-core:$FIREBASE_VERSION"
  compile "com.google.firebase:firebase-messaging:$FIREBASE_VERSION"

  // fabric
  //  compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
  //    transitive = true;
  //  }

  // font
  compile 'uk.co.chrisjenx:calligraphy:2.2.0'

  // network
  compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
  compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
  compile "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
  compile "com.squareup.okhttp3:okhttp:$OKHTTP3"
  compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP3"

  // rx
  compile "io.reactivex.rxjava2:rxjava:$RX_JAVA2"
  compile "io.reactivex.rxjava2:rxandroid:$RX_ANDROID"
  compile "io.reactivex.rxjava2:rxkotlin:$RX_KOTLIN"

  // dagger2
  compile "com.google.dagger:dagger:$DAGGER_VERSION"
  compile "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
  kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
  kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
//  compile "com.google.dagger:dagger:$DAGGER_VERSION"
//  kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
//  provided 'org.glassfish:javax.annotation:10.0-b28'

  // debuggin
  compile 'com.facebook.stetho:stetho:1.5.0'
  compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
  compile 'com.jakewharton.timber:timber:4.5.1'
  compile 'com.squareup.leakcanary:leakcanary-android:1.5'

  compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
  compile 'com.github.bumptech.glide:glide:3.7.0'

  // ui test
  androidTestCompile "org.hamcrest:hamcrest-junit:2.0.0.0"
  androidTestCompile "junit:junit:$JUNIT_VERSION"
  androidTestCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
  androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
    exclude group: 'com.android.support', module: 'appcompat'
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
  }
  androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
  androidTestCompile "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION"
  androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$UI_AUTOMATOR_VERSION"
  androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
  androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
  androidTestCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
  androidTestCompile "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
  androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
  androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

  kaptAndroidTest "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

  // unit test
  testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  testCompile 'org.amshove.kluent:kluent:1.19'
  testCompile "junit:junit:$JUNIT_VERSION"
  testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
  testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
  testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
  testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
  testCompile 'org.robolectric:robolectric:3.3.2'
  testCompile "com.nhaarman:mockito-kotlin:1.4.0"

  kaptTest "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
}

